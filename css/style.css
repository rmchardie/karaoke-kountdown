@import url("https://fonts.googleapis.com/css2?family=Bangers&family=Poppins&display=swap");

:root {
  --primary-color: #0077ff;
  --focus-color: #ff9900;
  --button-color: #f4ff52;
  --button-shadow: #9faa03;
  --timer-duration: 10s;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  overflow: hidden;
  font-size: 16px;
  line-height: 1.5;
  /* outline: solid 1px #fff; */
}

body {
  height: 100vh;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='70' height='46' viewBox='0 0 70 46'%3E%3Cg fill-rule='evenodd'%3E%3Cg fill='%23999999' fill-opacity='0.4'%3E%3Cpolygon points='68 44 62 44 62 46 56 46 56 44 52 44 52 46 46 46 46 44 40 44 40 46 38 46 38 44 32 44 32 46 26 46 26 44 22 44 22 46 16 46 16 44 12 44 12 46 6 46 6 44 0 44 0 42 8 42 8 28 6 28 6 0 12 0 12 28 10 28 10 42 18 42 18 28 16 28 16 0 22 0 22 28 20 28 20 42 28 42 28 28 26 28 26 0 32 0 32 28 30 28 30 42 38 42 38 0 40 0 40 42 48 42 48 28 46 28 46 0 52 0 52 28 50 28 50 42 58 42 58 28 56 28 56 0 62 0 62 28 60 28 60 42 68 42 68 0 70 0 70 46 68 46'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "Poppins", sans-serif;
}

i {
  margin-right: 10px;
  font-size: 18px;
}

h1 {
  font-size: 24px;
  color: #fff;
  margin-top: 10px;
}

h2,
h3 {
  text-align: center;
  margin-bottom: 20px;
  background-color: var(--primary-color);
  color: #fff;
  border-radius: 15px;
  padding: 10px 60px;
}

h3 {
  font-size: smaller;
}

ul {
  margin-left: 10px;
  margin-right: 10px;
}

li {
  margin-top: 10px;
  margin-bottom: 10px;
  text-align: justify;
}

span {
  margin-right: 10px;
}

form,
input,
button {
  width: 90%;
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin-top: 10px;
  padding: 10px 0 20px 0;
}

input,
button {
  appearance: none;
  border: none;
  height: 40px;
  border-radius: 5px;
  font-size: 18px;
}

input {
  text-align: center;
}

input:focus {
  outline: solid 3px var(--focus-color);
}

button {
  background-color: var(--button-color);
  font-weight: 900;
  box-shadow: 0 4px 2px var(--button-shadow);
  cursor: pointer;
  color: #333;
}

button:hover {
  filter: brightness(90%);
}

button:active {
  transform: translateY(5px);
}

button i {
  margin-right: 10px;
}

strong {
  font-family: "Bangers", sans-serif;
  font-size: 40px;
  letter-spacing: 5px;
  color: #fff;
}

/* Container for loading animation */
.intro-container {
  position: absolute;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  background-color: var(--primary-color);
  transition: all 1s ease-in-out;
  z-index: 10;
}

.intro-container .intro-image {
  width: 100%;
  transform: scale(5);
  opacity: 0;
  transition: all 1s ease-in-out;
}

/* Container for the player input screen */
.app-container {
  position: relative;
  width: 90%;
  height: 90vh;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 0.625em;
  background-color: var(--primary-color);
  border: solid 0.1em var(--primary-color);
  border-radius: 0.3125em;
  box-shadow: 0 3px 0 0 rgb(0 0 0 / 35%);
  font-size: 1.25em;
}

/* Container for the player details and logo */
.header-container {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 0.3125em;
  margin-top: 20px;
  color: #fff;
}

.header-container__player-name {
  align-self: flex-start;
  margin-left: 20px;
}

.header-container__player-name i {
  transform: translateY(6px);
}

.header-container__player-details {
  width: 90%;
  display: flex;
  justify-content: space-between;
}

.header-container__player-trophies i {
  transform: translateY(4px);
  color: #ffd100;
}

.header-container img {
  width: 100%;
}

/* Container for entering player name */
.player-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Container for the word list buttons */
.word-list-container__btns {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 30px;
  margin-top: 20px;
  padding-bottom: 20px;
}

/* Container for the set timer screen */
.timer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
}

.timer-container__btns {
  display: flex;
  justify-content: center;
}

.timer-container img {
  width: 25%;
  margin-right: 20px;
  cursor: pointer;
}

.timer-container img:last-of-type {
  margin-right: 0;
}

.timer-container img:hover {
  filter: brightness(110%);
}

.timer-container__text {
  text-align: center;
  font-size: 32px;
  color: #fff;
}

/* Container for the Get ready to play screen */
.countdown-container {
  width: 100%;
  text-align: center;
  letter-spacing: 5px;
}

.countdown-container__text {
  font-size: 200px;
}

/* Container for the actual game play */
.game-container {
  width: 90%;
  color: #fff;
  text-align: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 20px;
  padding-bottom: 20px;
}

.game-container__word-box-container {
  box-shadow: 0 3px 0 0 rgb(0 0 0 / 35%);
}

.game-container__word-box-container,
.game-container__word-box {
  width: 200px;
  height: 200px;
  border-radius: 15px;
  background-color: whitesmoke;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 32px;
  font-weight: 500;
  color: #372fc8;
  transition: transform 0.5s ease-out;
  transform-style: preserve-3d;
  backface-visibility: hidden;
}

.game-container__word-box {
  width: 95%;
  height: 95%;
  background-color: #c4c4c4;
}

/* Transition when player guesses song correctly */
.flip {
  transform: rotateX(90deg);
}

.game-container__slogan {
  font-size: 18px;
  font-weight: 400;
}

.game-container__timer-container {
  position: relative;
  width: 100%;
  height: 5px;
  background-color: #fff;
  border-radius: 25px;
}

.game-container__timer {
  position: absolute;
  width: 100%;
  height: 5px;
  background-color: #fff;
}

.game-container .countdown {
  z-index: 9;
  background-color: var(--focus-color);
  width: 100%;
  align-self: flex-start;
}

.game-container__timer-label {
  align-self: flex-end;
  margin-top: -15px;
}

.game-container__buzzer {
  width: 75px;
  height: 75px;
  background-color: #0cca4a;
  border: solid 5px #fcfafa;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 25%);
  cursor: pointer;
}

.game-container__buzzer:hover {
  filter: brightness(110%);
}

.game-container__buzzer:active {
  transform: translateY(5px);
  box-shadow: unset;
}

.game-container__buzzer i {
  font-size: 40px;
  margin-left: 10px;
}

.game-btns {
  width: 100%;
  display: flex;
  justify-content: space-between;
  padding-bottom: 10px;
}

.game-btns__restart-btn,
.game-btns__settings-btn {
  width: 50px;
  height: 50px;
  border: solid 5px var(--primary-color);
  border-radius: 50%;
  box-shadow: 0 4px 4px 2px rgba(0, 0, 0, 25%);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;
  color: var(--focus-color);
  cursor: pointer;
}

.game-btns__restart-btn:hover,
.game-btns__settings-btn:hover {
  filter: brightness(90%);
}

.game-btns__restart-btn:active,
.game-btns__settings-btn:active {
  box-shadow: unset;
  transform: translateY(5px);
}

.game-btns__restart-btn i,
.game-btns__settings-btn i {
  margin-top: -10px;
}

.stopwatch {
  font-size: 150px;
  color: #ff0000;
}

/* Container for buttons at the bottom of the app */
.footer-container {
  position: absolute;
  width: 90%;
  bottom: 20px;
  margin: 0 auto;
  padding-top: 5px;
  padding-bottom: 5px;
  padding-left: 10px;
  padding-right: 10px;
  font-size: 16px;
  color: #fff;
  display: flex;
  justify-content: flex-end;
}

.footer-container i,
button i {
  top: 50%;
  transform: translateY(25%);
}

.footer-container i {
  margin-right: 0;
}

.instructions-btn,
.change-player-btn {
  border: solid 1px #fff;
  padding: 5px 10px 10px 10px;
  border-radius: 25px;
  cursor: pointer;
}

.instructions-btn i,
.change-player-btn i {
  margin-right: 5px;
}

/* In game containers for different screens */
.instructions-container,
.reset-game-container,
.times-up-container,
.game-settings-container,
.level-complete-container {
  position: absolute;
  width: 100%;
  height: 90vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-color: rgba(255, 255, 255, 0.5);
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  z-index: 10;
}

.instructions-container__bg,
.reset-game-container__bg,
.times-up-container__bg,
.game-settings-container__bg,
.level-complete-container__bg {
  position: relative;
  width: 90%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border: solid 5px #c4c4c4;
  border-radius: 10px;
  background-color: rgba(255, 255, 255, 0.5);
  padding-top: 20px;
  padding-bottom: 20px;
}

.reset-game-container__bg,
.times-up-container__bg,
.game-settings-container__bg {
  gap: 20px;
}

.times-up-container__bg i {
  margin-right: unset;
}

/* Different styling for cancel button */
.cancel {
  background-color: transparent;
  box-shadow: unset;
  border: solid 1px #ff0000;
  color: #ff0000;
}

#levelCompletedTrophyText {
  text-align: center;
  margin: 10px;
}

#nextLevelBtn {
  margin-top: 20px;
}

/* Class for the timer bar animation */
.timerAnimation {
  animation: timer var(--timer-duration) linear;
  animation-fill-mode: forwards;
}

/* Class for the trophy animation */
.trophyAnimation {
  animation: trophy 0.5s ease-out;
}

/* Timer countdown animation */
@keyframes timer {
  0% {
    width: 100%;
  }

  100% {
    width: 0%;
  }
}

/* Shake trophy animation */
@keyframes trophy {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }
  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }
  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }
  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }
  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}

/* Class to hide screens when not in use */
.hidden {
  display: none;
}
